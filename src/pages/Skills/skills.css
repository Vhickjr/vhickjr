.skills {
  background: black;
  height: 100vh;
  overflow-x: hidden;
}

a:hover {
  color: #046d33 !important;
}
.portt1 {
  width: 100%;
  display: flex;
  height: auto;
  justify-content: center;
  flex-wrap: wrap;
}
.portt2 {
  height: 355px;
  position: relative;
  width: 40%;
  display: flex;
  margin-top: 40px;
}
.portt3 {
  height: 300px;
  width: 40%;
  padding-left: 1%;
  margin: 200px 1% 1% -40px;
  z-index: 3;
  opacity: 1;
  background: #000;
  border-radius: 0px 0px 15px 15px;
}
.img-containerr {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-family: Shippori Antique, sans-serif;
  max-width: 100%;
}
.img-containerr1 {
  position: absolute;
  box-sizing: border-box;
  padding: 0px;
  border: none;
  margin: auto;
  display: block;
  width: 0px;
  height: 0px;
  min-width: 100%;
  max-width: 100%;
  min-height: 100%;
  max-height: 100%;
  filter: none;
  background-size: cover;
  background-image: none;
  background-position: 0% 0%;
  border-radius: 15px 15px 0px 0px;
}
.img-containerr2 {
  box-sizing: border-box;
  display: inline-block;
  overflow: hidden;
  width: initial;
  height: initial;
  background: none;
  opacity: 1;
  border: 0px;
  margin: 0px;
  padding: 0px;
  position: relative;
  max-width: 100%;
}

#arrrow1 {
  position: absolute;
  top: 30px;
  left: 30px;
  z-index: 4;
}
#arrrow2 {
  color: white;
  position: absolute;
  top: 47px;
  right: 30px;
  z-index: 4;
}

label {
  display: flex;
  flex-direction: column;
  width: 70px;
  cursor: pointer;
}

label span {
  background: #fff;
  border-radius: 10px;
  height: 7px;
  margin: 7px 0;
  transition: 0.4s cubic-bezier(0.68, -0.6, 0.32, 1.6);
}

span:nth-of-type(1) {
  width: 50%;
}

span:nth-of-type(2) {
  width: 100%;
}

span:nth-of-type(3) {
  width: 75%;
}

input[type="checkbox"] {
  display: none;
}

input[type="checkbox"]:checked ~ span:nth-of-type(1) {
  transform-origin: bottom;
  transform: rotatez(45deg) translate(8px, 0px);
}

input[type="checkbox"]:checked ~ span:nth-of-type(2) {
  transform-origin: top;
  transform: rotatez(-45deg);
}

input[type="checkbox"]:checked ~ span:nth-of-type(3) {
  transform-origin: bottom;
  width: 50%;
  transform: translate(30px, -11px) rotatez(45deg);
}

@media only screen and (max-width: 1200px) {
  /*Tablets [601px -> 1200px]*/

  .portt2 {
    height: 130px;
    position: relative;
    width: 30%;
    display: flex;
    margin-top: 180px;
  }
  .portt3 {
    height: 276px;
    width: 40%;
    padding-left: 1%;
    margin: 130px 1% 1% -40px;
    z-index: 3;
    opacity: 1;
    background: #f4f4f4;
    padding-top: 10px;
    padding-bottom: 10px;
  }
}
@media only screen and (max-width: 600px) {
  /*Big smartphones [426px -> 600px]*/
  .portt2 {
    height: 200px;
    width: 100%;
    position: relative;
    display: flex;

    margin-right: 40px;
    margin-left: 40px;
    margin-top: 40px;
  }
  .portt3 {
    height: 250px;
    width: 100%;
    padding-left: 1%;
    margin-right: 40px;
    margin-left: 40px;
    margin-top: 10px;
    margin-bottom: 40px;
    z-index: 3;
    opacity: 1;
    background: #000;
    padding-top: 10px;
    padding-bottom: 10px;
  }
}
@media only screen and (max-width: 425px) {
  .portt2 {
    height: 200px;
    width: 100%;
    position: relative;
    display: flex;
    margin-right: 40px;
    margin-left: 40px;
    margin-top: 40px;
  }
  .portt3 {
    height: 250px;
    width: 100%;
    padding-left: 1%;
    margin-right: 40px;
    margin-left: 40px;
    margin-top: 10px;
    margin-bottom: 40px;
    z-index: 3;
    opacity: 1;
    background: #000;
    padding-top: 10px;
    padding-bottom: 10px;
  }
}

/* 1. for the item to maintain its original stacking context, use position relative on the main container,
  2. instead of using relative on the component, you could also use transform: translate(x,y)
  */
